version: "3.9"

services:

  nginx:
    container_name: nginx
    build: ./nginx
    image: arches_oc/nginx
    env_file:
      - ./.env
    volumes:
      - ./logs/nginx:/logs/nginx
      - nginx_ssl:/etc/nginx/ssl
      - certbot_certs:/etc/letsencrypt
      - arches_certbot:$CERT_PATH
      - ./html:$NGINX_HTML_PATH
    ports:
      - "8000:8000"
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - arches
    networks:
      - arches_net

  certbot:
    container_name: certbot
    build: ./certbot
    image: arches_oc/certbot
    env_file:
      - ./.env
    volumes:
      - certbot_certs:/etc/letsencrypt
      - arches_certbot:$CERT_PATH
    depends_on:
      - nginx

  cron:
    container_name: cron
    build: ./cron
    image: arches_oc/cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    depends_on:
      - nginx
      - certbot

  arches_db:
    container_name: arches_db
    image: postgis/postgis:14-3.2
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD="${PGPASSWORD}"
    restart: always
    volumes:
        - postgres-data:/var/lib/postgresql/data/
        - postgres-log:/var/log/postgresql
        - ./init-unix.sql:/docker-entrypoint-initdb.d/init.sql # to set up the DB template
    ports:
      - '5434:5432'
    networks:
      - arches_net

  arches_elasticsearch:
    container_name: arches_elasticsearch
    image: elasticsearch:8.3.1
    restart: always
    env_file:
      - ./.env
    environment:
      - TZ="${TZ}"
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms400m -Xmx400m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9202:9200"
      - "9302:9300"
    networks:
      - arches_net

  arches:
    container_name: arches
    image: arches
    restart: always
    env_file:
      - ./.env
    build:
      context: .
      dockerfile: arches/Dockerfile
    environment:
      - DEBUG="${DEBUG}"
      - ARCHES_PROJECT="${ARCHES_PROJECT}"
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    ports:
      - "5432:5432"
      - "8983:8983"
    depends_on:
      - arches_db
      - arches_elasticsearch
    expose:
      - 8000
    volumes:
      - arches-log:/arches/arches/logs
      - arches-static:/static_root
    networks:
      - arches_net

networks:
  arches_net:
    driver: bridge
    name: arches_net

volumes:
  logs_nginx:
    external: true
  nginx_ssl:
    external: true
  certbot_certs:
    external: true
  arches_certbot:
    external: true
  couchdb-data:
  couchdb-log:
  postgres-data:
  postgres-log:
  elasticsearch-data:
  rabbitmq-logs:
  rabbitmq-data:
  arches-log:
  arches-static: